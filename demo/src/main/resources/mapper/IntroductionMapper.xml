<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.IntroductionMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Introduction">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ware_title" jdbcType="VARCHAR" property="wareTitle" />
    <result column="new_price" jdbcType="VARCHAR" property="newPrice" />
    <result column="old_price" jdbcType="VARCHAR" property="oldPrice" />
    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
    <result column="msales_volume" jdbcType="INTEGER" property="msalesVolume" />
    <result column="ssales_volume" jdbcType="INTEGER" property="ssalesVolume" />
    <result column="taste" jdbcType="VARCHAR" property="taste" />
    <result column="pack" jdbcType="VARCHAR" property="pack" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ware_title, new_price, old_price, delivery_address, msales_volume, ssales_volume, 
    taste, pack, number
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.IntroductionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_introduction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_introduction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_introduction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.entity.Introduction" useGeneratedKeys="true">
    insert into tb_introduction (ware_title, new_price, old_price, 
      delivery_address, msales_volume, ssales_volume, 
      taste, pack, number
      )
    values (#{wareTitle,jdbcType=VARCHAR}, #{newPrice,jdbcType=VARCHAR}, #{oldPrice,jdbcType=VARCHAR}, 
      #{deliveryAddress,jdbcType=VARCHAR}, #{msalesVolume,jdbcType=INTEGER}, #{ssalesVolume,jdbcType=INTEGER}, 
      #{taste,jdbcType=VARCHAR}, #{pack,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo.entity.Introduction" useGeneratedKeys="true">
    insert into tb_introduction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="wareTitle != null">
        ware_title,
      </if>
      <if test="newPrice != null">
        new_price,
      </if>
      <if test="oldPrice != null">
        old_price,
      </if>
      <if test="deliveryAddress != null">
        delivery_address,
      </if>
      <if test="msalesVolume != null">
        msales_volume,
      </if>
      <if test="ssalesVolume != null">
        ssales_volume,
      </if>
      <if test="taste != null">
        taste,
      </if>
      <if test="pack != null">
        pack,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="wareTitle != null">
        #{wareTitle,jdbcType=VARCHAR},
      </if>
      <if test="newPrice != null">
        #{newPrice,jdbcType=VARCHAR},
      </if>
      <if test="oldPrice != null">
        #{oldPrice,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null">
        #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="msalesVolume != null">
        #{msalesVolume,jdbcType=INTEGER},
      </if>
      <if test="ssalesVolume != null">
        #{ssalesVolume,jdbcType=INTEGER},
      </if>
      <if test="taste != null">
        #{taste,jdbcType=VARCHAR},
      </if>
      <if test="pack != null">
        #{pack,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Introduction">
    update tb_introduction
    <set>
      <if test="wareTitle != null">
        ware_title = #{wareTitle,jdbcType=VARCHAR},
      </if>
      <if test="newPrice != null">
        new_price = #{newPrice,jdbcType=VARCHAR},
      </if>
      <if test="oldPrice != null">
        old_price = #{oldPrice,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null">
        delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="msalesVolume != null">
        msales_volume = #{msalesVolume,jdbcType=INTEGER},
      </if>
      <if test="ssalesVolume != null">
        ssales_volume = #{ssalesVolume,jdbcType=INTEGER},
      </if>
      <if test="taste != null">
        taste = #{taste,jdbcType=VARCHAR},
      </if>
      <if test="pack != null">
        pack = #{pack,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Introduction">
    update tb_introduction
    set ware_title = #{wareTitle,jdbcType=VARCHAR},
      new_price = #{newPrice,jdbcType=VARCHAR},
      old_price = #{oldPrice,jdbcType=VARCHAR},
      delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      msales_volume = #{msalesVolume,jdbcType=INTEGER},
      ssales_volume = #{ssalesVolume,jdbcType=INTEGER},
      taste = #{taste,jdbcType=VARCHAR},
      pack = #{pack,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>